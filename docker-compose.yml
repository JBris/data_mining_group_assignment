version: "3.5"

services:
  datascience:
    image: "rocker/tidyverse:${TIDYVERSE_TAG}"
    container_name: "${PROJECT_NAME}_datascience"
    hostname: datascience
    stop_grace_period: 60s
    restart: always
    build: 
      dockerfile: Dockerfile
      context: .
      args:
        TIDYVERSE_TAG: $TIDYVERSE_TAG
    environment:
      USER: $R_STUDIO_USER
      PASSWORD: $R_STUDIO_PASSWORD
      ROOT: "TRUE"
      #DISABLE_AUTH: true
    ports:
      - ${R_STUDIO_PORT}:8787 
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./scripts:/home
      
  influxdb:
    image: "influxdb:${INFLUXDB_TAG}"
    container_name: "${PROJECT_NAME}_influxdb"
    hostname: influxdb
    restart: always
    stop_grace_period: 60s
    ports:
      - "${INFLUXDB_API_PORT}:8086"
    environment:
      INFLUXDB_DATA_ENGINE: $INFLUXDB_DATA_ENGINE
      INFLUXDB_REPORTING_DISABLED: $INFLUXDB_REPORTING_DISABLED
      INFLUXDB_DATA_QUERY_LOG_ENABLED: $INFLUXDB_DATA_QUERY_LOG_ENABLED
    volumes:
      - ./data/influxdb:/var/lib/influxdb

  grafana:
    image: "grafana/grafana:${GRAFANA_TAG}"
    container_name: "${PROJECT_NAME}_grafana"
    hostname: grafana
    restart: always
    stop_grace_period: 60s
    user: "0"
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      GF_INSTALL_PLUGINS: $GF_INSTALL_PLUGINS
    depends_on:
      - influxdb
    volumes:
      - ./data/grafana:/var/lib/grafana

  postgres:
    image: postgres:$POSTGRES_TAG
    container_name: "${PROJECT_NAME}_postgres"
    build: 
      dockerfile: Dockerfile
      context: ./services/postgres
      args:
        POSTGRES_TAG: $POSTGRES_TAG
    stop_grace_period: 60s
    restart: always
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
    ports:
      - ${DB_PORT}:5432
    volumes:
      - /var/lib/postgresql/data
      - ./data:/var/data

  adminer:
    image: adminer:$ADMINER_TAG
    container_name: "${PROJECT_NAME}_adminer"
    stop_grace_period: 60s
    restart: always
    ports:
      - ${ADMINER_PORT}:8080

networks:
  default:
      name: data_mining_group_assignment